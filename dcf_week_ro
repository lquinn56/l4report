import csv
import matplotlib.pyplot as plt
import numpy as np
import time
start = time.time()
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams['font.size'] = 12

"bl_lac"
body = "ngc1275"
cbody = body.upper()
band = "r"
cband = band.upper()
start = time.time()

odata = open(r"C:\Users\Lukaj\OneDrive\Documents\Y4\ProjectData\%s_%s.txt"%(body,band))

with open(r"C:\Users\Lukaj\OneDrive\Documents\Y4\ProjectData\%s_radio.csv"%body, newline='') as f:
    reader = csv.reader(f)
    radio = list(reader)
omag = []
odat = []
o_ve = []  
rc = 0 
for row in odata:
    spacecount = 0 
    rc +=1 
    if rc > 2: 
        for i in range(0,len(row)-1):
            if spacecount == 42:
                rc +=1
                magi = row[i+1:i+7]
                omag.append(float(magi))
                err = row[i+8:i+13]
                o_ve.append(float(err))
            if row[i] == " ":
                spacecount +=1   
    mjdi = row[0:17]
    mjdi = mjdi.split(" ")[0]
    if mjdi != 'MJD':
        odat.append(float(mjdi))

radf = []
raddat = [] 
raderr = [] 
for i in range(5, len(radio)):
    radf.append(float(radio[i][1]))
    raddat.append(float(radio[i][0]))
    raderr.append(float(radio[i][2]))

o_vf = [] 
o_ver = [] 
for k in range(0,len(omag)):
    o_vf.append(10**(-float(omag[k])/2.5))
    f = 10**(-float(omag[k])/2.5)
    econv = f*o_ve[k]*np.log(10)/2.5
    o_ver.append(econv)
    


shift = 75
xax = np.linspace(-shift, shift, num = (shift*2)+1)

"lower energy needs to be shifted relative to the higher"
dct_v = {}
for x in range(-shift,shift+1):
    shift_factor = x*7
    shifted_op = []
    for j in range(0,len(radf)):
        shifted_op.append([raddat[j]+ shift_factor, radf[j], raderr[j]])
        dct_v["lst_%s" % x ] = shifted_op

v_comp = {}
for a in range(-shift,shift+1):
    templ = []
    test = []
    for u in range(0,len(o_vf)):
        for v in range(0,len(dct_v["lst_0"])):
            if abs(dct_v["lst_"+str(a)][v][0] - odat[u]) < 0.5:
                templ.append([o_vf[u], o_ver[u] ,dct_v["lst_"+ str(a)][v][1],dct_v["lst_"+ str(a)][v][2]])
                v_comp["val_%s" %a] = templ
"gamma f, gamma err, optical f , optical err"
oval = []
gval = []
eavg_g = []
eavg_o = [] 
etime = 0  
for a in range(-shift,shift+1):
    hold_o = []
    hold_g = []
    hold_oe = []
    hold_ge = [] 
    for b in range(0,len(v_comp["val_%s"%a])):
        hold_o.append(v_comp["val_%s"%a][b][2])
        hold_g.append(v_comp["val_%s"%a][b][0])
        hold_oe.append(v_comp["val_%s"%a][b][3])
        hold_ge.append(v_comp["val_%s"%a][b][1])
    oval.append([np.std(hold_o), np.mean(hold_o)])
    gval.append([np.std(hold_g), np.mean(hold_g)])
    eavg_g.append(np.mean(hold_ge))
    eavg_o.append(np.mean(hold_oe))
    
dcf = [ ]
for u in range(-shift,shift+1):
    accu = 0 
    for v in range(0,len(v_comp["val_%s"%u])):
        udcft = (v_comp["val_%s"%u][v][0] - gval[u][1]) * (v_comp["val_%s"%u][v][2] - oval[u][1])

        udcfb = np.sqrt((gval[u][0]**2 - eavg_g[u]**2 ) * (oval[u][0]**2 - eavg_o[u]**2))
        udc = udcft/udcfb
        accu += udc
    dcf.append(accu/ len(v_comp["val_%s"%a]))


dcferr = [] 
for u in range(-shift,shift+1):
    for k in range(0,len(dcf)):
        accu  = 0 
        a = 0 
        for v in range(0,len(v_comp["val_%s"%u])):
            udcft = (v_comp["val_%s"%u][v][0] - gval[u][1]) * (v_comp["val_%s"%u][v][2] - oval[u][1])
            udcfb = np.sqrt((gval[u][0]**2 - eavg_g[u]**2 ) * (oval[u][0]**2 - eavg_o[u]**2))
            udcf = udcft/udcfb
            a = (udcf - dcf[k])**2
            accu+=a
        sig = (1/(len(v_comp["val_%s"%u])-1)) * np.sqrt(accu)
    dcferr.append(sig)
plt.errorbar(xax,dcf, yerr = dcferr,color = "blue", ls = " ", marker = "x", capsize = 3 , ecolor = "black")
end = time.time()
print(end-start)
# plt.scatter(xax,dcf, s = 4, color = "red")
plt.xlabel("Time Shift (Weeks)")
plt.ylabel("Direct Correlation Function")
plt.title("%s %s DCF for Optical / Radio Correlation"%(cbody,cband))
plt.savefig(r"C:\Users\Lukaj\OneDrive\Documents\Y4\ProjectFig\%s_%s_%sweek_dcf_ro.jpeg"%(body,band,shift), dpi = 500)

